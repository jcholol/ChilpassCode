using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.IO;
using System.Data.SQLite;
using System.Collections;


namespace Chilpass
{
    /*
     * Creators: Jonathan Cho and Hans Wilter
     * Chilpass_Main Partial Class
     * Summary: Contains methods for event triggers from the Chilpass_Main form.
     */

    public partial class Chilpass_Main : Form
    {

        /*
         * Constructor, initializes Windows Forms components.
         */
        public Chilpass_Main()
        {
            InitializeComponent();
        }

        /*
         * NewPasswordFileButton_Click
         * On the event that the NewPasswordFileButton is clicked, this method
         * is called.
         * Prompts the user to save a password file (db) through file explorer. 
         * Once the file is saved, this method stores the filepath and uses the 
         * FormManager class to open the NewPasswordFile Form with the filepath
         * as an argument.
         */
        private void NewPasswordFileButton_Click(object sender, EventArgs e)
        {
            // open the File Explorer, with parameters for db file and recommended name
            var saveDatabaseFile = new SaveFileDialog();
            saveDatabaseFile.Filter = "Database Files (*.db) | *.db";
            saveDatabaseFile.Title = "Save a Database File";
            saveDatabaseFile.FileName = "NewPasswordFile";


            string filepath = null;

            // File Saved
            if (saveDatabaseFile.ShowDialog() == DialogResult.OK)
            {
                // get the filepath
                filepath = saveDatabaseFile.FileName;

                // use from manager to send filepath to NewPasswordFileForm
                FormManager.OpenNPF(filepath);
            }
        }

        /*
         * OpenPasswordFileButton_Click
         * On the event that the OpenPasswordFileButton is clicked, this method
         * is called.
         * Prompts the user to open an existing PasswordFile (db) in their file
         * System, only accepts files with the correct file extension - .db. 
         * After selecting the file, this method saves the path and creates a 
         * SQLITe Connection with the file, querrying the stored 
         * Salt and Hash in the file. Uses the FormManager class to open the
         * OpenPasswordFile Form passing in the filepath, salt and hash.
         */
        private void OpenPasswordFileButton_Click(object sender, EventArgs e)
        {
            var filePath = string.Empty;
            
            // open the file explorer at the C drive
            using (OpenFileDialog openFileDialog = new OpenFileDialog())
            {
                openFileDialog.InitialDirectory = "C:\\";
                // filter for only db files
                openFileDialog.Filter = "Database Files (*.db) | *.db";
                openFileDialog.FilterIndex = 2;

                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    //Get path of file
                    filePath = openFileDialog.FileName;
                }
            }

            // ensure a file was selected
            if (filePath != "")
            {
                string oldSalt = String.Empty;
                string oldHash = String.Empty;

                SQLiteConnection sqliteConnection;

                // create a connection with the password file
                sqliteConnection = DatabaseManager.CreateConnection(filePath);

                // read the salt and the hash using DatabaseManager methods
                oldSalt = DatabaseManager.ReadSalt(sqliteConnection);
                oldHash = DatabaseManager.ReadHash(sqliteConnection);
                // close the connection with the file
                sqliteConnection.Close();

                // open OPF Form, passing in path, salt, and hash
                FormManager.OpenOPF(filePath, oldSalt, oldHash);
            }
        }

        /*
         * HelpButton_Click
         * Uses FormManager to open the HelpForm.
         */
        private void HelpButton_Click(object sender, EventArgs e)
        {
            FormManager.OpenHelpForm();
        }

        /*
         * ExitButton_Click
         * Closes the Chilpass_Main Form. 
         */
        private void ExitButton_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        /*
         * GeneratePasswordButton_Click
         * Uses the FormManager class to Open the GeneratePasswordForm.
         */
        private void GeneratePasswordButton_Click(object sender, EventArgs e)
        {
            FormManager.OpenGeneratePasswordForm();
        }

        /*
         * Generated by Windows Forms
         */
        private void pictureBox1_Click(object sender, EventArgs e)
        {

        }
    }
}
